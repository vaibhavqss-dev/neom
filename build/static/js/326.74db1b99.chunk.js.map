{"version":3,"file":"static/js/326.74db1b99.chunk.js","mappings":"4IAsCA,MACA,EAAe,IAA0B,kE,gFCxBzC,MA6CA,EA7CqDA,IAU9C,IAV+C,OACpDC,EAAM,KACNC,EAAI,SACJC,EAAQ,KACRC,EAAI,KACJC,EAAI,KACJC,EAAI,MACJC,EAAK,SACLC,EAAQ,iBACRC,GACDT,EACC,MAAMU,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IACPP,GAAoBA,EAAiBQ,SAAST,IAEhDK,UAAU,2BAA0BC,SACrC,YAGDC,EAAAA,EAAAA,KAAA,OACEC,QAASA,IAAMN,EAAS,0BAADQ,OAA2BV,IAClDW,GAAG,gBACHC,IAAKnB,EACLoB,IAAI,mBAIRT,EAAAA,EAAAA,MAAA,KAAGC,UAAU,qBAAoBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,0BAAyBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKI,GAAG,YAAYC,IAAKd,EAAMe,IAAI,UAClClB,MAEHY,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAAyBC,SAAEV,QAG1CW,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAEZ,KACpCa,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAET,MAC/B,E,cC1CV,MA0CA,EA1CkEL,IAQ3D,IAR4D,OACjEC,EAAM,KACNC,EAAI,SACJC,EAAQ,KACRC,EAAI,KACJC,EAAI,KACJC,EAAI,QACJgB,GACDtB,EACC,MAAMU,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,MAAA,OACEI,QAASA,IAAMN,EAAS,0BAADQ,OAA2BI,IAClDT,UAAU,0BAAyBC,SAAA,EAEnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,OAAKI,GAAG,oBAAoBC,IAAKnB,EAAQoB,IAAI,gBAC7CN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAGjBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCC,SAAA,EACnDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4CAA2CC,SAAA,EACxDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAAyBC,SAAEZ,KACxCa,EAAAA,EAAAA,KAAA,KAAGF,UAAU,yBAAwBC,SAAEV,KACvCW,EAAAA,EAAAA,KAAA,KAAGF,UAAU,yBAAwBC,SAAET,QAGzCO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,OACEI,GAAG,uDACHC,IAAKd,EACLe,IAAI,WAENN,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kDAAiDC,SAC3DX,YAIH,E,wBC9CK,SAASoB,IACtB,MAAMC,GAAYC,EAAAA,EAAAA,QAAuB,MAqBzC,MAAOC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAgB,IAK9D,OAJAC,EAAAA,EAAAA,YAAU,MATVC,iBACE,IACE,MAAMC,QAAaC,EAAAA,EAAAA,IAAS,wBAC5BL,EAAmBI,EAAKE,MAC1B,CAAE,MAAOC,GACPC,QAAQD,MAAM,aAAcA,EAC9B,CACF,CAGEE,EAAsB,GACrB,KAGDxB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,iCAAgCC,SAAA,CAC1CuB,aAAaC,QAAQ,YAAY,gDAGpCvB,EAAAA,EAAAA,KAAA,OAAKwB,IAAKf,EAAWX,UAAU,qCAAoCC,SACtC,GAA1BY,EAAgBc,OACfd,EAAgBe,KAAI,CAACC,EAAUnC,KAC7BQ,EAAAA,EAAAA,KAAC4B,EAA2B,CAC1BrB,QAASoB,EAAIlC,SAEbP,OAAQyC,EAAIT,MAAMW,WAAW,GAC7B1C,KAAMwC,EAAIT,MAAMY,MAChB1C,SAAUuC,EAAIT,MAAM9B,SACpBC,KAAMsC,EAAIT,MAAM7B,KAAK,GACrBC,KAAMqC,EAAIT,MAAM5B,KAAK,GACrBC,KAAMwC,EAAAA,GANDvC,MAUTQ,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gEAGNY,EAAgBc,OAAS,IACxBzB,EAAAA,EAAAA,KAACgC,EAAAA,EAAO,CAACC,WAjDIA,KACbxB,EAAUyB,UACZzB,EAAUyB,QAAQD,YAAc,IAClC,EA8CqCE,YA5CnBA,KACd1B,EAAUyB,UACZzB,EAAUyB,QAAQD,YAAc,IAClC,MA6CJ,C,wBCpCA,MAAMG,EAAsBA,KAE1B,MAAOC,EAAaC,IAAkBzB,EAAAA,EAAAA,UAA4B,KAC3D0B,EAAOC,IAAY3B,EAAAA,EAAAA,UAAsB,KACzCF,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAgB,KACvD4B,EAAgBC,IAAqB7B,EAAAA,EAAAA,UAAgB,KAErD8B,EAAoBC,IAAyB/B,EAAAA,EAAAA,WAAS,IACtDgC,EAAuBC,IAA4BjC,EAAAA,EAAAA,WAAS,IAC5DM,EAAO4B,IAAYlC,EAAAA,EAAAA,UAAwB,MAG5CmC,GAAUC,EAAAA,EAAAA,UACd,IAAMN,GAAsBE,GAC5B,CAACF,EAAoBE,IAIjBK,GAAgBD,EAAAA,EAAAA,UACpB,IAAM,IAAIE,IAAIZ,EAAMb,KAAK0B,GAASA,EAAK7C,YACvC,CAACgC,IAIGc,GAAmBC,EAAAA,EAAAA,cAAYvC,UACnC6B,GAAsB,GACtB,IACE,MAAM5B,QAAaC,EAAAA,EAAAA,IAAS,mBAC5BL,EAAmBI,EAAKuC,QAAU,GACpC,CAAE,MAAOC,GACPpC,QAAQD,MAAM,eAAgBqC,GAC9BT,EAAS,+BACX,CAAC,QACCH,GAAsB,EACxB,IACC,IAEGa,GAAsBH,EAAAA,EAAAA,cAAYvC,UACtC+B,GAAyB,GACzB,IACE,MAAM9B,QAAaC,EAAAA,EAAAA,IAAS,oBAC5ByB,EAAkB1B,EAAKuC,QAAU,GACnC,CAAE,MAAOC,GACPpC,QAAQD,MAAM,eAAgBqC,GAC9BT,EAAS,kCACX,CAAC,QACCD,GAAyB,EAC3B,IACC,IAGGpD,GAAmB4D,EAAAA,EAAAA,cAAa7D,KACpCiE,EAAAA,EAAAA,IAAYjE,EAASkE,YACrBrB,GAAgBsB,GAASA,EAAKC,QAAQlC,GAAQA,EAAIlC,WAAaA,MAC/D+C,GAAUoB,GAASA,EAAKC,QAAQlC,GAAQA,EAAIpB,UAAYd,KAAU,GACjE,IAEGqE,GAA8BR,EAAAA,EAAAA,cACjC7D,GAAsBD,GAAkBE,EAAiBD,IAC1D,CAACC,IAGGqE,GAAaT,EAAAA,EAAAA,cACjB,CAAC/C,EAAiBpB,KACA+D,EAAcc,IAAIzD,KAIhCmD,EAAAA,EAAAA,IAAYnD,EAAQoD,YACpBrB,GAAgBsB,GACdA,EAAKC,QAAQT,GAASA,EAAK3D,WAAac,MAE1CiC,GAAUoB,GAASA,EAAKC,QAAQlC,GAAQA,EAAIpB,UAAYA,SAGxD0D,EAAAA,EAAAA,IAAU1D,EAAQoD,YAAYO,KAAKb,GACnCb,GAAUoB,GAAS,IAAIA,EAAM,CAAErD,UAASpB,WAC1C,GAEF,CAAC+D,EAAeG,KAIlBvC,EAAAA,EAAAA,YAAU,KACR,IAAKH,EAAgBc,OAAQ,OAE7B,MAAM0C,EAAiBxD,EAAgBe,KAAI,CAACC,EAAUnC,KAAK,CACzD4E,IAAK5E,EAAMmE,WACXlE,SAAUkC,EAAIlC,SACdC,iBAAkBoE,EAA4BnC,EAAIlC,UAClDP,OAAQyC,EAAIE,WAAW,GACvB1C,KAAMwC,EAAIG,MACV1C,SAAUuC,EAAIvC,SACdC,KAAMsC,EAAItC,KAAK,GACfC,KAAMqC,EAAIrC,KAAK,GACfC,KAAMwC,EAAAA,MAGRO,EAAe6B,GACf3B,EACE2B,EAAezC,KAAK0B,IAAI,CACtB7C,QAAS6C,EAAK3D,SACdN,KAAMiE,EAAKjE,SAEd,GACA,CAACwB,EAAiBmD,KAGrBhD,EAAAA,EAAAA,YAAU,KACRuC,IACAI,GAAqB,GACpB,CAACJ,EAAkBI,IAGtB,MAAMY,GAAmBpB,EAAAA,EAAAA,UAAQ,IAC3BD,GAEAhD,EAAAA,EAAAA,KAAA,OACEsE,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,MAAO,OACP3E,SACH,eAKDoB,GAActB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,UAAQoB,MAG7BnB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SACnCsC,EAAYX,KAAKC,IAChB3B,EAAAA,EAAAA,KAAC2E,EAAe,CAEdlF,SAAUkC,EAAIlC,SACdD,MAAOU,SAASyB,EAAIlC,UACpBC,iBAAkBiC,EAAIjC,iBACtBR,OAAQyC,EAAIzC,OACZC,KAAMwC,EAAIxC,KACVC,SAAUuC,EAAIvC,SACdC,KAAMsC,EAAItC,KACVC,KAAMqC,EAAIrC,KACVC,KAAMoC,EAAIpC,MATLoC,EAAIlC,eAchB,CAAC4C,EAAaW,EAAS7B,IAGpByD,GAAqB3B,EAAAA,EAAAA,UAAQ,IAC7B9B,GAAS6B,IAAYP,EAAehB,QAC/BzB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0CAIVC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,SACzC0C,EAAef,KAAI,CAACC,EAAKkD,KACxB7E,EAAAA,EAAAA,KAAC8E,EAAAA,EAAI,CAEHf,WAAYA,EACZgB,QAAS7B,EAAcc,IAAIrC,EAAIlC,UAC/Bc,QAASoB,EAAIlC,SACbD,MAAOqF,EAAI,EACX3F,OAAQyC,EAAIT,MAAMW,WAAW,GAC7BmD,YAAarD,EAAIT,MAAM7B,KAAK,GAC5B4F,YAAatD,EAAIT,MAAMgE,QACvB/F,KAAMwC,EAAIT,MAAMY,MAChBqD,UAAWxD,EAAIT,MAAM5B,KAAK,GAC1B8F,SAAUzD,EAAIyD,SACdhG,SAAUuC,EAAIvC,SACdC,KAAMsC,EAAItC,KACVC,KAAMqC,EAAIrC,MAbLqC,EAAIlC,eAkBhB,CAACgD,EAAgBO,EAAS7B,EAAO4C,EAAYb,IAEhD,OACElD,EAAAA,EAAAA,KAAAqF,EAAAA,SAAA,CAAAtF,UACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,oBAAmBC,SAAA,CAAC,gBACjBuB,aAAaC,QAAQ,eAGb,IAAvBc,EAAYZ,QACXzB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAAyBC,SAAC,kFAKvCF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,0BAAyBC,SAAA,CAAC,yBACdsC,EAAYZ,OAAO,2BAI7C4C,GAEDrE,EAAAA,EAAAA,KAACQ,EAA6B,KAE9BX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0CAAyCC,SAAC,2CAIvDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2CAA0CC,SACtD6E,WAIN,EAIP,EAAeU,EAAAA,KAAWlD,E,uDC3O1B,MASA,EATwCnD,IAAkC,IAAjC,WAAEgD,EAAU,YAAEE,GAAalD,EAClE,OACEY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,UAAQC,QAASkC,EAAarC,UAAW,wBACzCE,EAAAA,EAAAA,KAAA,UAAQC,QAASgC,EAAYnC,UAAW,wBACpC,C,iECOV,MAkEA,EAlEkCb,IAe3B,IAf4B,MACjCO,EAAK,QACLe,EAAO,OACPrB,EAAM,YACN8F,EAAW,YACXC,EAAW,KACX9F,EAAI,UACJgG,EAAS,SACTC,EAAQ,SACRhG,EAAQ,KACRC,EAAI,KACJC,EAAI,QACJyF,EAAO,WACPhB,EAAU,OACVwB,GACDtG,EACC,MAKMU,GAAWC,EAAAA,EAAAA,MAEjB,OACEI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OACEC,QAASA,IAAMN,EAAS,0BAADQ,OAA2BI,IAClDT,UAAU,yCAAwCC,UAElDC,EAAAA,EAAAA,KAAA,OACEK,IAAKnB,EACLoB,IAAI,kBACJR,UAAU,oCAGdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC5CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6CAA4CC,SACtDkF,KAEHjF,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6CAA4CC,SACtDiF,EAAYQ,MAAM,KAAK,SAI5BxF,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qCAAoCC,SAAEZ,KAEnDU,EAAAA,EAAAA,MAAA,KAAGC,UAAU,qCAAoCC,SAAA,CAC9CoF,EAAUK,MAAM,KAAK,GAAG,OAAK,IAAI,IAAEtF,SAASiF,EAAUK,MAAM,KAAK,GAAG,IAAI,EAAE,aAG/ExF,EAAAA,EAAAA,KAAA,OACEC,QAASA,UApCCwF,IAAZlF,GAEJwD,GAAcA,EAAWxD,EAASpB,EAkCG,EAC/BW,UACEiF,EACI,yCACA,mCAGPQ,IAAUvF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+BAA8BC,SAAEP,MAnCbA,IAqC3C,C","sources":["assets/img/smileGreenFace.svg","components/Favorites/ShortListedCard/ShortListedCard.tsx","components/Favorites/recommendation/recommadation.tsx","components/Favorites/recommendation/recommadationSlider.tsx","components/Favorites/Favorites.tsx","components/LeftandRightButtons/buttons.tsx","components/base/card/card.tsx"],"sourcesContent":["var _g, _g2, _g3;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgSmileGreenFace(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_bgCarrier\",\n    strokeWidth: 0\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_tracerCarrier\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_iconCarrier\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5.5 7C6.32843 7 7 6.32843 7 5.5C7 4.67157 6.32843 4 5.5 4C4.67157 4 4 4.67157 4 5.5C4 6.32843 4.67157 7 5.5 7ZM12 5.5C12 6.32843 11.3284 7 10.5 7C9.67157 7 9 6.32843 9 5.5C9 4.67157 9.67157 4 10.5 4C11.3284 4 12 4.67157 12 5.5ZM8 11C6.89543 11 6 10.1046 6 9H4C4 11.2091 5.79086 13 8 13C10.2091 13 12 11.2091 12 9H10C10 10.1046 9.10457 11 8 11Z\",\n    fill: \"#1ed233\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSmileGreenFace);\nexport default __webpack_public_path__ + \"static/media/smileGreenFace.9ce66825383463f29fa46bb11c5739ec.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ntype FavoritesImgProps = {\n  imgURL: string;\n  name: string;\n  category: string;\n  date: string;\n  time: string;\n  face: string;\n  event_id: string;\n  index: number;\n  onFavoriteRemove?: (index: number) => void;\n};\n\nconst ShortListedCard: React.FC<FavoritesImgProps> = ({\n  imgURL,\n  name,\n  category,\n  date,\n  time,\n  face,\n  index,\n  event_id,\n  onFavoriteRemove,\n}) => {\n  const navigate = useNavigate();\n  return (\n    <div className=\"favorites_img_container\">\n      <div className=\"favorites_img_container\">\n        <button\n          onClick={() =>\n            onFavoriteRemove && onFavoriteRemove(parseInt(event_id))\n          }\n          className=\"favorites_img_remove_btn\"\n        >\n          Remove\n        </button>\n        <img\n          onClick={() => navigate(`/event-details?eventId=${event_id}`)}\n          id=\"favorites_img\"\n          src={imgURL}\n          alt=\"underwater\"\n        />\n      </div>\n\n      <p className=\"favorites_img_type\">\n        <p className=\"favorites_img_type_text\">\n          <img id=\"smileface\" src={face} alt=\"smile\" />\n          {category}\n        </p>\n        <p className=\"favorites_img_type_date\">{date}</p>\n      </p>\n\n      <p className=\"favorites_img_title\">{name}</p>\n      <p className=\"favorites_img_time\">{time}</p>\n    </div>\n  );\n};\n\nexport default ShortListedCard;\n","import React from \"react\";\nimport smileGreenFace from \"./../../../assets/img/smileGreenFace.svg\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface RecommadationProps {\n  imgURL: string;\n  name: string;\n  category: string;\n  date: string;\n  time: string;\n  face: string;\n  eventId: string;\n}\n\nconst FavoritesRecommendationCard: React.FC<RecommadationProps> = ({\n  imgURL,\n  name,\n  category,\n  date,\n  time,\n  face,\n  eventId,\n}) => {\n  const navigate = useNavigate();\n  return (\n    <div\n      onClick={() => navigate(`/event-details?eventId=${eventId}`)}\n      className=\"recommadation_container\"\n    >\n      <div className=\"recommadation_img_container\">\n        <img id=\"recommadation_img\" src={imgURL} alt=\"underwater\" />\n        <div className=\"recommadation_text\"></div>\n      </div>\n\n      <div className=\"recommadation_container_text_overlay\">\n        <div className=\"recommadation_container_text_overlay_left\">\n          <p className=\"recommadation_img_title\">{name}</p>\n          <p className=\"recommadation_img_type\">{date}</p>\n          <p className=\"recommadation_img_time\">{time}</p>\n        </div>\n\n        <div className=\"recommadation_container_text_overlay_right\">\n          <img\n            id=\"recommadation_container_text_overlay_right_smileface\"\n            src={face}\n            alt=\"smile\"\n          />\n          <p className=\"recommadation_container_text_overlay_right_text\">\n            {category}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FavoritesRecommendationCard;\n","import { useEffect, useRef, useState } from \"react\";\nimport FavoritesRecommendationCard from \"./recommadation\";\nimport smileGreenFace from \"./../../../assets/img/smileGreenFace.svg\";\nimport Buttons from \"../../LeftandRightButtons/buttons\";\nimport { get_data } from \"../../../api/api\";\n\nexport default function FavoritesRecommendationSlider() {\n  const sliderRef = useRef<HTMLDivElement>(null);\n\n  const scrollLeft = () => {\n    if (sliderRef.current) {\n      sliderRef.current.scrollLeft -= 300;\n    }\n  };\n  const scrollRight = () => {\n    if (sliderRef.current) {\n      sliderRef.current.scrollLeft += 300;\n    }\n  };\n\n  async function fetchRecommendations() {\n    try {\n      const data = await get_data(`/user/recommendation`);\n      setRecommendations(data.event);\n    } catch (error) {\n      console.error(\"API error:\", error);\n    }\n  }\n  const [recommendations, setRecommendations] = useState<any[]>([]);\n  useEffect(() => {\n    fetchRecommendations();\n  }, []);\n\n  return (\n    <div className=\"favorites_recommendation\">\n      <p className=\"favorites_recommendation_title\">\n        {localStorage.getItem(\"fullname\")}, we've found some recommendation for\n        you\n      </p>\n      <div ref={sliderRef} className=\"favorites_recommendation_container\">\n        {recommendations.length != 0 ? (\n          recommendations.map((ele: any, index) => (\n            <FavoritesRecommendationCard\n              eventId={ele.event_id}\n              key={index}\n              imgURL={ele.event.image_urls[0]}\n              name={ele.event.title}\n              category={ele.event.category}\n              date={ele.event.date[0]}\n              time={ele.event.time[0]}\n              face={smileGreenFace}\n            />\n          ))\n        ) : (\n          <p>No New recommendations found, Please come after some time</p>\n        )}\n      </div>\n      {recommendations.length > 1 && (\n        <Buttons scrollLeft={scrollLeft} scrollRight={scrollRight} />\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState, useCallback, useMemo } from \"react\";\nimport ShortListedCard from \"./ShortListedCard/ShortListedCard\";\nimport smileGreenFace from \"./../../assets/img/smileGreenFace.svg\";\nimport FavoritesRecommendationSlider from \"./recommendation/recommadationSlider\";\nimport Card from \"../base/card/card\";\nimport { Likeevent, Unlikeevent } from \"../../api/utility_api\";\nimport { get_data } from \"../../api/api\";\n\n// Improved type definitions\ntype ShortListedItem = {\n  key: string;\n  onFavoriteRemove: (index: number) => void;\n  imgURL: string;\n  name: string;\n  category: string;\n  date: string;\n  time: string;\n  face: string;\n  event_id: string;\n};\n\ntype LikedItem = {\n  eventId: string;\n  name: string;\n};\n\nconst Favorites: React.FC = () => {\n  // State declarations with proper types\n  const [shortListed, setShortListed] = useState<ShortListedItem[]>([]);\n  const [liked, setLiked] = useState<LikedItem[]>([]);\n  const [recommendations, setRecommendations] = useState<any[]>([]);\n  const [trendingEvents, setTrendingEvents] = useState<any[]>([]);\n\n  const [likedEventsLoading, setLikedEventsLoading] = useState(false);\n  const [trendingEventsLoading, setTrendingEventsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Memoized values\n  const loading = useMemo(\n    () => likedEventsLoading || trendingEventsLoading,\n    [likedEventsLoading, trendingEventsLoading]\n  );\n\n  // Memoized liked event IDs for faster lookups\n  const likedEventIds = useMemo(\n    () => new Set(liked.map((item) => item.eventId)),\n    [liked]\n  );\n\n  // Extracted API functions\n  const fetchLikedEvents = useCallback(async () => {\n    setLikedEventsLoading(true);\n    try {\n      const data = await get_data(\"/user/likeevent\");\n      setRecommendations(data.events || []);\n    } catch (err) {\n      console.error(\"Fetch error:\", err);\n      setError(\"Failed to fetch liked events\");\n    } finally {\n      setLikedEventsLoading(false);\n    }\n  }, []);\n\n  const fetchTrendingEvents = useCallback(async () => {\n    setTrendingEventsLoading(true);\n    try {\n      const data = await get_data(\"/events/trending\");\n      setTrendingEvents(data.events || []);\n    } catch (err) {\n      console.error(\"Fetch error:\", err);\n      setError(\"Failed to fetch trending events\");\n    } finally {\n      setTrendingEventsLoading(false);\n    }\n  }, []);\n\n  // Optimized callbacks\n  const onFavoriteRemove = useCallback((event_id: string) => {\n    Unlikeevent(event_id.toString());\n    setShortListed((prev) => prev.filter((ele) => ele.event_id !== event_id));\n    setLiked((prev) => prev.filter((ele) => ele.eventId !== event_id));\n  }, []);\n\n  const createFavoriteRemoveHandler = useCallback(\n    (event_id: string) => (index: number) => onFavoriteRemove(event_id),\n    [onFavoriteRemove]\n  );\n\n  const handleLike = useCallback(\n    (eventId: string, name: string) => {\n      const isLiked = likedEventIds.has(eventId);\n\n      if (isLiked) {\n        // Unlike event\n        Unlikeevent(eventId.toString());\n        setShortListed((prev) =>\n          prev.filter((item) => item.event_id !== eventId)\n        );\n        setLiked((prev) => prev.filter((ele) => ele.eventId !== eventId));\n      } else {\n        // Like event - optimistic UI update then refresh\n        Likeevent(eventId.toString()).then(fetchLikedEvents);\n        setLiked((prev) => [...prev, { eventId, name }]);\n      }\n    },\n    [likedEventIds, fetchLikedEvents]\n  );\n\n  // Process recommendations into shortlisted items\n  useEffect(() => {\n    if (!recommendations.length) return;\n\n    const favoritesArray = recommendations.map((ele: any, index) => ({\n      key: index.toString(),\n      event_id: ele.event_id,\n      onFavoriteRemove: createFavoriteRemoveHandler(ele.event_id),\n      imgURL: ele.image_urls[0],\n      name: ele.title,\n      category: ele.category, \n      date: ele.date[0],\n      time: ele.time[0],\n      face: smileGreenFace,\n    }));\n\n    setShortListed(favoritesArray);\n    setLiked(\n      favoritesArray.map((item) => ({\n        eventId: item.event_id,\n        name: item.name,\n      }))\n    );\n  }, [recommendations, createFavoriteRemoveHandler]);\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchLikedEvents();\n    fetchTrendingEvents();\n  }, [fetchLikedEvents, fetchTrendingEvents]);\n\n  // Memoized UI for cards\n  const shortListedCards = useMemo(() => {\n    if (loading)\n      return (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            color: \"red\",\n          }}\n        >\n          Loading...\n        </div>\n      );\n\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n      <div className=\"favoritesPg_container\">\n        {shortListed.map((ele) => (\n          <ShortListedCard\n            key={ele.event_id}\n            event_id={ele.event_id}\n            index={parseInt(ele.event_id)}\n            onFavoriteRemove={ele.onFavoriteRemove}\n            imgURL={ele.imgURL}\n            name={ele.name}\n            category={ele.category}\n            date={ele.date}\n            time={ele.time}\n            face={ele.face}\n          />\n        ))}\n      </div>\n    );\n  }, [shortListed, loading, error]);\n\n  // Memoized trending events cards\n  const trendingEventCards = useMemo(() => {\n    if (error || loading || !trendingEvents.length) {\n      return <p>No New Trending Events Available now</p>;\n    }\n\n    return (\n      <div className=\"recommendationCardContainer\">\n        {trendingEvents.map((ele, i) => (\n          <Card\n            key={ele.event_id}\n            handleLike={handleLike}\n            isLiked={likedEventIds.has(ele.event_id)}\n            eventId={ele.event_id}\n            index={i + 1}\n            imgURL={ele.event.image_urls[0]}\n            subtextDate={ele.event.date[0]}\n            subtextName={ele.event.subtext}\n            name={ele.event.title}\n            timeRange={ele.event.time[0]}\n            location={ele.location}\n            category={ele.category}\n            date={ele.date}\n            time={ele.time}\n          />\n        ))}\n      </div>\n    );\n  }, [trendingEvents, loading, error, handleLike, likedEventIds]);\n\n  return (\n    <>\n      <div className=\"favoritesPg\">\n        <p className=\"favoritesPg_greet\">\n          Good Morning {localStorage.getItem(\"fullname\")}\n        </p>\n\n        {shortListed.length === 0 ? (\n          <p className=\"favoritesPg_description\">\n            You have not short listed any events yet, click on heart icon to get\n            started\n          </p>\n        ) : (\n          <p className=\"favoritesPg_description\">\n            You have short listed {shortListed.length} events to join later\n          </p>\n        )}\n\n        {shortListedCards}\n\n        <FavoritesRecommendationSlider />\n\n        <div className=\"favoritesPgRecommandation_section\">\n          <p className=\"favoritesPgRecommandation_section-title\">\n            Top 5 activities on this Island today\n          </p>\n\n          <div className=\"favoritesPgRecommandation_section-slider\">\n            {trendingEventCards}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(Favorites);\n","import React from \"react\";\nimport \"./buttons.css\";\n\ninterface ButtonsProps {\n  scrollLeft?: () => void;\n  scrollRight?: () => void;\n}\n\nconst Buttons: React.FC<ButtonsProps> = ({ scrollLeft, scrollRight }) => {\n  return (\n    <div className=\"button-container\">\n      <button onClick={scrollRight} className={\"arrow-button right\"}></button>\n      <button onClick={scrollLeft} className={\"arrow-button left\"}></button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ntype CardProps = {\n  eventId: string;\n  index: number;\n  category: string;\n  date: string;\n  time: string;\n  name: string;\n  subtextName: string;\n  subtextDate: string;\n  timeRange: string;\n  location: string;\n  imgURL: string;\n  isLiked?: boolean;\n  handleLike?: (id: string, name: string) => void;\n  IsRank?: boolean;\n};\n\nconst Card: React.FC<CardProps> = ({\n  index,\n  eventId,\n  imgURL,\n  subtextDate,\n  subtextName,\n  name,\n  timeRange,\n  location,\n  category,\n  date,\n  time,\n  isLiked,\n  handleLike,\n  IsRank,\n}) => {\n  const onLikedHandle = () => {\n    if (eventId === undefined) return;\n    // console.log(\"Liked Event: \", eventId, name);\n    handleLike && handleLike(eventId, name);\n  };\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"recommendationCards\">\n      <div className=\"recommendationCards_card\" key={index}>\n        <div\n          onClick={() => navigate(`/event-details?eventId=${eventId}`)}\n          className=\"recommendationCards_card_img_container\"\n        >\n          <img\n            src={imgURL}\n            alt=\"Upcoming Events\"\n            className=\"recommendationCards_card_img\"\n          />\n        </div>\n        <div className=\"recommendationCards_card_text\">\n          <div className=\"recommendationCards_card_text_subtext\">\n            <p className=\"recommendationCards_card_text_subtext_name\">\n              {subtextName}\n            </p>\n            <p className=\"recommendationCards_card_text_subtext_date\">\n              {subtextDate.split(\":\")[0]}\n            </p>\n          </div>\n\n          <p className=\"recommendationCards_card_text_name\">{name}</p>\n\n          <p className=\"recommendationCards_card_text_time\">\n            {timeRange.split(\":\")[0]} AM {\"-\"} {parseInt(timeRange.split(\":\")[0][0])+3} AM\n          </p>\n        </div>\n        <div\n          onClick={() => onLikedHandle()}\n          className={\n            isLiked\n              ? \"recommendationCards_card_heart isLiked\"\n              : \"recommendationCards_card_heart\"\n          }\n        ></div>\n        {IsRank && <div className=\"recommendationCards_cardRank\">{index}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["_ref","imgURL","name","category","date","time","face","index","event_id","onFavoriteRemove","navigate","useNavigate","_jsxs","className","children","_jsx","onClick","parseInt","concat","id","src","alt","eventId","FavoritesRecommendationSlider","sliderRef","useRef","recommendations","setRecommendations","useState","useEffect","async","data","get_data","event","error","console","fetchRecommendations","localStorage","getItem","ref","length","map","ele","FavoritesRecommendationCard","image_urls","title","smileGreenFace","Buttons","scrollLeft","current","scrollRight","Favorites","shortListed","setShortListed","liked","setLiked","trendingEvents","setTrendingEvents","likedEventsLoading","setLikedEventsLoading","trendingEventsLoading","setTrendingEventsLoading","setError","loading","useMemo","likedEventIds","Set","item","fetchLikedEvents","useCallback","events","err","fetchTrendingEvents","Unlikeevent","toString","prev","filter","createFavoriteRemoveHandler","handleLike","has","Likeevent","then","favoritesArray","key","shortListedCards","style","display","justifyContent","alignItems","color","ShortListedCard","trendingEventCards","i","Card","isLiked","subtextDate","subtextName","subtext","timeRange","location","_Fragment","React","IsRank","split","undefined"],"sourceRoot":""}