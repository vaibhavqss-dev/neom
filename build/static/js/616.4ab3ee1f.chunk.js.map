{"version":3,"file":"static/js/616.4ab3ee1f.chunk.js","mappings":"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","sources":["components/editSetting/editSetting.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { get_data, patch_data, post_data } from \"../../api/api\";\n\ntype SettingsProps = {\n  personalandAccount: boolean;\n  operator: boolean;\n  managedata: boolean;\n  password_security: boolean;\n  notification_email: boolean;\n  notification_sms: boolean;\n  notification_personalized: boolean;\n  language: string;\n};\n\nconst EditSetting: React.FC = () => {\n  const [settings, setSettings] = useState<SettingsProps | undefined>();\n\n  const handleToggle = (\n    settingName: string,\n    settingValue: string | boolean\n  ) => {\n    setSettings((prevSettings) => {\n      if (!prevSettings) return prevSettings;\n      return {\n        ...prevSettings,\n        [settingName]: settingValue,\n      };\n    });\n  };\n\n  const handleLanguageChange = (language: string) => {\n    setSettings((prevSettings) => {\n      if (!prevSettings) return prevSettings;\n      return {\n        ...prevSettings,\n        language: language,\n      };\n    });\n  };\n\n  async function fetchSettings() {\n    try {\n      const data = await get_data(`/user/settings`);\n      setSettings(data.settings);\n    } catch (error) {\n      console.error(\"Error fetching settings:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchSettings();\n  }, []);\n\n  async function updateSettings() {\n    try {\n      const data = await patch_data(`/user/settings`, settings);\n      if (data.error) {\n        console.error(\"API error:\", data.error);\n        return;\n      }\n      alert(\"Settings submitted successfully\");\n    } catch (error) {\n      console.error(\"Error submitting settings:\", error);\n    }\n  }\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    updateSettings();\n  };\n\n  return (\n    <div className=\"editSetting\">\n      <div className=\"editSettingPg\">\n        <div className=\"editSettingPg_headers\">\n          <h1>Good morning {localStorage.getItem(\"fullname\")}!</h1>\n          <p>\n            You can change the settings for your personal data and other\n            information.\n          </p>\n        </div>\n\n        <div className=\"editSettingPg_form\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"editSettingPg_form_input\">\n              <div className=\"editSettingPg_form_input_text\">\n                <p>Personal and Account Information</p>\n                <p>\n                  Would you like to share your personal information with us to\n                  know you better?\n                </p>\n              </div>\n              <div className=\"editSettingPg_form_input_toggle\">\n                <input\n                  type=\"checkbox\"\n                  id=\"personalInfo\"\n                  checked={settings?.personalandAccount || false}\n                  onChange={() =>\n                    handleToggle(\n                      \"personalandAccount\",\n                      !settings?.personalandAccount\n                    )\n                  }\n                />\n                <label htmlFor=\"personalInfo\"></label>\n              </div>\n            </div>\n\n            <div className=\"editSettingPg_form_input\">\n              <div className=\"editSettingPg_form_input_text\">\n                <p>Consent for sharing information with operators</p>\n                <p>\n                  Would you like to share your personal information with the\n                  operator to serve you better?\n                </p>\n              </div>\n              <div className=\"editSettingPg_form_input_toggle\">\n                <input\n                  type=\"checkbox\"\n                  id=\"operatorConsent\"\n                  checked={settings?.operator || false}\n                  onChange={() => handleToggle(\"operator\", !settings?.operator)}\n                />\n                <label htmlFor=\"operatorConsent\"></label>\n              </div>\n            </div>\n\n            <div className=\"editSettingPg_form_input\">\n              <div className=\"editSettingPg_form_input_text\">\n                <p>Manage your data</p>\n                <p>\n                  Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed\n                  diam nonumy eirmod?\n                </p>\n              </div>\n              <div className=\"editSettingPg_form_input_toggle\">\n                <input\n                  type=\"checkbox\"\n                  id=\"manageData\"\n                  checked={settings?.managedata || false}\n                  onChange={() =>\n                    handleToggle(\"managedata\", !settings?.managedata)\n                  }\n                />\n                <label htmlFor=\"manageData\"></label>\n              </div>\n            </div>\n\n            <div className=\"editSettingPg_form_input\">\n              <div className=\"editSettingPg_form_input_text\">\n                <p>Password and Security</p>\n                <p>\n                  Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed\n                  diam nonumy eirmod?\n                </p>\n              </div>\n              <div className=\"editSettingPg_form_input_toggle\">\n                <input\n                  type=\"checkbox\"\n                  id=\"passwordSecurity\"\n                  checked={settings?.password_security || false}\n                  onChange={() =>\n                    handleToggle(\n                      \"password_security\",\n                      !settings?.password_security\n                    )\n                  }\n                />\n                <label htmlFor=\"passwordSecurity\"></label>\n              </div>\n            </div>\n\n            <div className=\"editSettingPg_form_input_multiSelect\">\n              <div className=\"editSettingPg_form_input_text\">\n                <p>Notifications</p>\n                <p>Which type of notifications would you like to receive?</p>\n              </div>\n              <div className=\"editSettingPg_form_input_checkbox _multiSelect\">\n                <div className=\"checkbox-item\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"notificationsEmails\"\n                    checked={settings?.notification_email || false}\n                    onChange={() =>\n                      handleToggle(\n                        \"notification_email\",\n                        !settings?.notification_email\n                      )\n                    }\n                  />\n                  <label htmlFor=\"notificationsEmails\">Emails</label>\n                </div>\n                <div className=\"checkbox-item\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"notificationsApp\"\n                    checked={settings?.notification_sms || false}\n                    onChange={() =>\n                      handleToggle(\n                        \"notification_sms\",\n                        !settings?.notification_sms\n                      )\n                    }\n                  />\n                  <label htmlFor=\"notificationsApp\">Notifications</label>\n                </div>\n                <div className=\"checkbox-item\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"notificationsPersonalized\"\n                    checked={settings?.notification_personalized || false}\n                    onChange={() =>\n                      handleToggle(\n                        \"notification_personalized\",\n                        !settings?.notification_personalized\n                      )\n                    }\n                  />\n                  <label htmlFor=\"notificationsPersonalized\">\n                    Personalized notifications\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"editSettingPg_form_input_multiSelect\">\n              <div className=\"editSettingPg_form_input_text\">\n                <p>Language</p>\n                <p>\n                  Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed\n                  diam nonumy eirmod?\n                </p>\n              </div>\n              <div className=\"editSettingPg_form_input_checkbox _multiSelect\">\n                <div className=\"checkbox-item\">\n                  <input\n                    type=\"radio\"\n                    id=\"languageEnglish\"\n                    name=\"language\"\n                    checked={settings?.language === \"english\"}\n                    onChange={() => handleLanguageChange(\"english\")}\n                  />\n                  <label htmlFor=\"languageEnglish\">English</label>\n                </div>\n                <div className=\"checkbox-item\">\n                  <input\n                    type=\"radio\"\n                    id=\"languageFrench\"\n                    name=\"language\"\n                    checked={settings?.language === \"french\"}\n                    onChange={() => handleLanguageChange(\"french\")}\n                  />\n                  <label htmlFor=\"languageFrench\">French</label>\n                </div>\n                <div className=\"checkbox-item\">\n                  <input\n                    type=\"radio\"\n                    id=\"languageArabic\"\n                    name=\"language\"\n                    checked={settings?.language === \"arabic\"}\n                    onChange={() => handleLanguageChange(\"arabic\")}\n                  />\n                  <label htmlFor=\"languageArabic\">Arabic</label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"editSettingPg_form_submit\">\n              <button type=\"submit\" className=\"submit-btn\">\n                Save Settings\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditSetting;\n"],"names":["EditSetting","settings","setSettings","useState","handleToggle","settingName","settingValue","prevSettings","_objectSpread","handleLanguageChange","language","useEffect","async","data","get_data","error","console","fetchSettings","_jsx","className","children","_jsxs","localStorage","getItem","onSubmit","e","preventDefault","patch_data","alert","updateSettings","type","id","checked","personalandAccount","onChange","htmlFor","operator","managedata","password_security","notification_email","notification_sms","notification_personalized","name"],"sourceRoot":""}